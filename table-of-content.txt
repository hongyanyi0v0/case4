Table of content

1. Invited papers
1.1 Extreme Programming: A Discipline of Software Development
1.2 Components and Generative Programming

2. Software Components
2.1 A Component and Communication Model for Push Systems
2.2 A Fine-Grained Model for Code Mobility
2.3 Robots: A Real-time System Architectural Style

3. Software Process
3.1 Collaboration and Composition: Issues for a Second Generation Process Language
3.2 Using UML for software Process Modelling 
3.3 A Probabilistic Model for Software Projects

4. Specification
4.1 Designing Specification Languages for Process Control Systems
4.2 Using Model Checking to Generate Tests from Requirements Specifications
4.3 Specification-based Prototyping for Embedded System

5. Program Analysis
5.1 Coping with Type Casts in C
5.2 Efficient Points-to Analysis for Whole-Program Analysis
5.3 The Concept of Dynamic Analysis
5.4 Data-Flow Analysis of Program Fragment

6. Testing and Debugging
6.1 Yesterday, My Program Worked. Today, It Does Not. Why?
6.2 Comparison Checking: An Approach to Avoid Debugging
6.3 Structural Specification-based Testing: Automated Support and Experimental Evaluation
6.4 An Efficient Relevant Slicing Method for Debugging

7. Java
7.1 Analysing Exception Flow in Java Program
7.2 An Efficient Algorithm for Computing MHP Information for Concurrent Java Programs
7.3 CoffeeSrainer: Statically-Checked Constraints on the Definition and Use of Types in JAVA

8. Architecture and Model
8.1 The CIP Method: Component and Model-based Construction of Embedded Systems
8.2 Algebraic Software Architecture Reconfiguration
8.3 Consistency Checking for Multiple View Software Architectures

9. Reuse
9.1 Synergy Between Component-based and Generative Approaches
9.2 Transitioning Legacy Assets to a Product Line Architecture
9.3 CHIME: A Metadata-based Distribution Software Development Environment

10. Verification and Checking 
10.1 FACADE: A Typed Intermediate Language Dedicated to Smart Cards
10.2 Verification of Real-time Designs: Combining Scheduling Theory 
10.3 Checking Progress with Action Priority: It is Fair?
